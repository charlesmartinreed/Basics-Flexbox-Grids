.d1 {
	background: LightSkyBlue;
}

.d2 {
	background: LightSalmon;
	/* justify-self: center; /* center horizontal within the cell */
}
.d3 {
	background: PaleTurquoise;
	/* align-self: end; /* align vertically, at the bottom of the cell */
}
.d4 {
	background: LightPink;
}

.d5 {
	background: PaleGreen;
	/* grid-column: 2 / 4; /* take up last two */
	/* grid-row: 2 / 4; /* take up last two */
	/* grid-area: 1/1/1/4; Think coordinate system (3,1) & (4,4) */
}

.container2 {
	font-size: 40px;
	min-height: 300px;
	width: 100%;
	background: Silver;
	display: grid;
	grid-template-rows: repeat(3, 1fr);
	grid-template-columns: repeat(auto-fill, minmax(60px, 1fr));
}

.container {
	font-size: 40px;
	min-height: 300px;
	width: 100%;
	background: LightGray;
	display: grid;
	/* grid-template-columns: repeat(3, minmax(90px, 1fr)); */
	grid-template-rows: repeat(3, 1fr);
	/* grid-template-columns: repeat(auto-fill, minmax(60px, 1fr)); depending on size of container, more columns */
	grid-template-columns: repeat(auto-fit, minmax(60px, 1fr));
	grid-gap: 10px;
	/* justify-items: center; */
	/* align-items: end; */

	/* . means empty cell */
	/* grid-template-areas:
		"header header header"
		". content content"
		"footer footer footer"; */

	/* measurement units include %, pixels, ems and fr */
	/* grid-template-columns: 1fr 1fr 1fr; */
	/* auto means only as much space as needed by contained element */

	/* grid-template-columns: auto 50px 10% 2fr 1fr; */
	/* grid-template-columns: 1fr 1fr 1fr; */
	/* grid-template-columns: 1fr 100px 2fr;
	grid-template-rows: 50px 50px; */

	/* creating gaps - first number is row, second is column*/
	/* grid-column-gap: 20px;
	grid-row-gap: 5px; */
	/* grid-gap: 5px 20px; */

	/* Grid layout for a 3x3
		 1 2 3 4
		 2
		 3
		 4

		 Taking up two columns : 1 3
		 grid-column
	*/

}
